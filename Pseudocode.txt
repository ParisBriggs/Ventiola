// Pseudocode for Ventiola Prototype II 

Include libraries 
Define variables 

Setup() {
  // Setup lilypad outputs: speaker 
  // Setup lilypad inputs: soft pots, pressure sensor 
}

Loop() {
  Setup(); 

  // Initialise values: sensorVal, noteLeft, noteRight

  // read in pressure sensor data 
  double sensorReadings[] = readSensor(); 
  // apply moving average filter to data  
  sensorVal = MAF(sensorReadings, 20); 
  
  if (sensorVal) { // only play note if pressure applied to sensor 

    // read in soft pot data (left & right)
    double potLeftReadings[] = readSoftPotLeft(); 
    double potRightReadings[] = readSoftPotRight(); 

    // apply moving average filter to data
    noteLeft = MAF(potLeftReadings, 20); // average value determines the musical note 
    noteRight = MAF(potRightReadings, 20); 

    // pitch bend notes 
    noteLeft = pitchBendNote(sensorVal, noteLeft); // pressure sensor determines the pitch bend of the note (octave shifting) 
    noteRight = pitchBendNote(sensorVal, noteRight); 

    // send final output to speaker 
    playNotes(noteLeft, noteRight); 
  }
  else { 
    return;
  } 
}

void readSensor() {}
double readSoftPotLeft() {}
double readSoftPotRight() {}
const uint16_t pitchBendNote(sensorVal, note) {} 
void playNotes(noteLeft, noteRight) {} // send sound outputs to speaker 
double MAF(sensorData, numData) {} 



